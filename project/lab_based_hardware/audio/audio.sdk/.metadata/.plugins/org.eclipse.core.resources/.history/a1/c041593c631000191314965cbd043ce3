
#include "PreProcessing.h"
#include <xparameters.h>

Preprocessing::Preprocessing
	(ThreadPriority priority, string name, VolumeControl * volume_control, OutputQueue * outputQueue) :
	AbstractOS::Thread(priority, name),
	volume(volume_control), output_queue(outputQueue)
{
	XGpio_CfgInitialize(&switches, &gpio_config, XPAR_AXI_GPIO_0_BASEADDR);
}

void Preprocessing::HandleSample(AudioSample l_sample, AudioSample r_sample)
{
	static char count = 0;
    AudioSample r_v = volume->ApplyVolume(volume->ApplyFilter(r_sample));
    AudioSample l_v = volume->ApplyVolume(volume->ApplyFilter(l_sample));

    output_queue->EnqueueAudioCommand(r_sample, l_sample);
    if(count++ == 20) // TODO: Replace with aggregation.
    {
    	output_queue->EnqueueLedCommand(r_v, l_v);
    	count = 0;
    }
}

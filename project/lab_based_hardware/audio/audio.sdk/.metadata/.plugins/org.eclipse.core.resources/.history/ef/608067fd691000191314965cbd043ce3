#pragma once

#include <FreeRTOS.h>
#include <queue.h>
#include "Leds.h"
#include "AudioOutput.h"
#include "LedCommand.h"
#include "AudioCommand.h"
#include "os/Mutex.h"
#include "os/MutexGuard.h"

class OutputQueue :public AbstractOS::Thread
{
private:
	QueueHandle_t audio_queue_handle;
	QueueHandle_t led_queue_handle;

	AudioOutput * audio_out;
	Leds * led_out;
	AbstractOS::Mutex audio_mutex, led_mutex;
public:
	OutputQueue(ThreadPriority priority, string name,AudioOutput * audio, Leds * leds);
	void EnqueueAudioCommand(AudioSample right_sample, AudioSample left_sample);
	void EnqueueLedCommand(AudioSample right_sample, AudioSample left_sample);
	void DeQueueLed();
	void DeQueueAudio();
	virtual void run();
	~OutputQueue();
};

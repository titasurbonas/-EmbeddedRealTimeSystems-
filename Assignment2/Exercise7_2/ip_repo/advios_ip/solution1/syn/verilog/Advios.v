// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Advios,hls_ip_2018_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.830375,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=43,HLS_SYN_LUT=163,HLS_VERSION=2018_2}" *)

module Advios (
        clk,
        reset,
        ctrl,
        switches,
        leds
);


input   clk;
input   reset;
input  [3:0] ctrl;
input  [3:0] switches;
output  [3:0] leds;

reg[3:0] leds;

wire   [0:0] Advios_ssdm_threa_load_fu_108_p1;
wire   [1:0] ap_CS_fsm;
wire    grp_Advios_LedControl_fu_70_clk_second;
wire   [3:0] grp_Advios_LedControl_fu_70_leds;
wire    grp_Advios_LedControl_fu_70_leds_ap_vld;
wire    grp_Advios_modulate_clock_fu_90_clk_second_i;
wire    grp_Advios_modulate_clock_fu_90_clk_second_o;
wire    grp_Advios_modulate_clock_fu_90_clk_second_o_ap_vld;
reg   [0:0] clk_second;
wire    ap_CS_fsm_state2;

Advios_LedControl grp_Advios_LedControl_fu_70(
    .ap_clk(clk),
    .ap_rst(reset),
    .clk_second(grp_Advios_LedControl_fu_70_clk_second),
    .ctrl(ctrl),
    .switches(switches),
    .leds(grp_Advios_LedControl_fu_70_leds),
    .leds_ap_vld(grp_Advios_LedControl_fu_70_leds_ap_vld)
);

Advios_modulate_clock grp_Advios_modulate_clock_fu_90(
    .ap_clk(clk),
    .ap_rst(reset),
    .clk_second_i(grp_Advios_modulate_clock_fu_90_clk_second_i),
    .clk_second_o(grp_Advios_modulate_clock_fu_90_clk_second_o),
    .clk_second_o_ap_vld(grp_Advios_modulate_clock_fu_90_clk_second_o_ap_vld)
);

always @ (posedge clk) begin
    if ((grp_Advios_modulate_clock_fu_90_clk_second_o_ap_vld == 1'b1)) begin
        clk_second <= grp_Advios_modulate_clock_fu_90_clk_second_o;
    end
end

always @ (posedge clk) begin
    if ((grp_Advios_LedControl_fu_70_leds_ap_vld == 1'b1)) begin
        leds <= grp_Advios_LedControl_fu_70_leds;
    end
end

assign Advios_ssdm_threa_load_fu_108_p1 = 1'd0;

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign grp_Advios_LedControl_fu_70_clk_second = clk_second;

assign grp_Advios_modulate_clock_fu_90_clk_second_i = clk_second;

endmodule //Advios

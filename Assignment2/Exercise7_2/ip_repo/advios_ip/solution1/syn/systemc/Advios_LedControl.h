// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Advios_LedControl_HH_
#define _Advios_LedControl_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Advios_LedControl : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > clk_second;
    sc_in< sc_lv<4> > ctrl;
    sc_in< sc_lv<4> > switches;
    sc_out< sc_lv<4> > leds;
    sc_out< sc_logic > leds_ap_vld;


    // Module declarations
    Advios_LedControl(sc_module_name name);
    SC_HAS_PROCESS(Advios_LedControl);

    ~Advios_LedControl();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > last_clock;
    sc_signal< sc_lv<4> > counter_V;
    sc_signal< sc_lv<1> > grp_read_fu_82_p2;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > last_clock_load_load_fu_108_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > v_V_1_fu_135_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_112_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_125_p2;
    sc_signal< sc_lv<4> > r_V_fu_118_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_condition_75;
    sc_signal< bool > ap_condition_54;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_condition_54();
    void thread_ap_condition_75();
    void thread_grp_read_fu_82_p2();
    void thread_last_clock_load_load_fu_108_p1();
    void thread_leds();
    void thread_leds_ap_vld();
    void thread_r_V_fu_118_p2();
    void thread_tmp_3_fu_112_p2();
    void thread_tmp_4_fu_125_p2();
    void thread_v_V_1_fu_135_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

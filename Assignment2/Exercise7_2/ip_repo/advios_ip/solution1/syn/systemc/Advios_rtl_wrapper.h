//RTL Wrapper auto-generated by Vivado HLS.
#include "Advios.h"


SC_MODULE(Advios_rtl_wrapper) {

    //ESL interface.

    sc_in_clk clk;

    sc_in<bool > reset;

    sc_in<sc_uint<4> > ctrl;

    sc_in<sc_uint<4> > switches;

    sc_out<sc_uint<4> > leds;

    //RTL interface signals.


    sc_signal<sc_logic > rtl_reset;

    sc_signal<sc_lv<4> > rtl_ctrl;

    sc_signal<sc_lv<4> > rtl_switches;

    sc_signal<sc_lv<4> > rtl_leds;


Advios* Advios_inst;

    SC_CTOR(Advios_rtl_wrapper) { 

        Advios_inst = new Advios("Advios_rtl_inst");


        initInstances(Advios_inst);

        SC_METHOD(signal_connection);

        sensitive<<clk<<reset<<ctrl<<switches<<rtl_leds;

    }

    ~Advios_rtl_wrapper() {

    delete Advios_inst;

    }

    void initInstances(Advios * Advios_inst) {

        //The RTL model.

        
        Advios_inst->clk(clk);

        Advios_inst->reset(rtl_reset);

        Advios_inst->ctrl(rtl_ctrl);

        Advios_inst->switches(rtl_switches);

        Advios_inst->leds(rtl_leds);

    }


    void signal_connection() {


        rtl_reset.write((sc_logic)(reset.read()));

        rtl_ctrl.write((sc_lv<4>)(ctrl.read()));

        rtl_switches.write((sc_lv<4>)(switches.read()));

        leds.write((sc_lv<4>)(rtl_leds.read()));


    }

};

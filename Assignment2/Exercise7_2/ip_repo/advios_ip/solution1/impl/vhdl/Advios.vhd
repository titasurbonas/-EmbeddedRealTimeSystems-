-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Advios is
port (
    clk : IN STD_LOGIC;
    reset : IN STD_LOGIC;
    ctrl : IN STD_LOGIC_VECTOR (3 downto 0);
    switches : IN STD_LOGIC_VECTOR (3 downto 0);
    leds : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of Advios is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Advios,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.920000,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=143,HLS_SYN_LUT=136}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Advios_ssdm_threa_load_fu_116_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal grp_Advios_LedControl_fu_78_clk_second : STD_LOGIC;
    signal grp_Advios_LedControl_fu_78_leds : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Advios_LedControl_fu_78_leds_ap_vld : STD_LOGIC;
    signal grp_Advios_modulate_clock_fu_98_clk_second_i : STD_LOGIC;
    signal grp_Advios_modulate_clock_fu_98_clk_second_o : STD_LOGIC;
    signal grp_Advios_modulate_clock_fu_98_clk_second_o_ap_vld : STD_LOGIC;
    signal clk_second : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";

    component Advios_LedControl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        clk_second : IN STD_LOGIC;
        ctrl : IN STD_LOGIC_VECTOR (3 downto 0);
        switches : IN STD_LOGIC_VECTOR (3 downto 0);
        leds : OUT STD_LOGIC_VECTOR (3 downto 0);
        leds_ap_vld : OUT STD_LOGIC );
    end component;


    component Advios_modulate_clock IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        clk_second_i : IN STD_LOGIC;
        clk_second_o : OUT STD_LOGIC;
        clk_second_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_Advios_LedControl_fu_78 : component Advios_LedControl
    port map (
        ap_clk => clk,
        ap_rst => reset,
        clk_second => grp_Advios_LedControl_fu_78_clk_second,
        ctrl => ctrl,
        switches => switches,
        leds => grp_Advios_LedControl_fu_78_leds,
        leds_ap_vld => grp_Advios_LedControl_fu_78_leds_ap_vld);

    grp_Advios_modulate_clock_fu_98 : component Advios_modulate_clock
    port map (
        ap_clk => clk,
        ap_rst => reset,
        clk_second_i => grp_Advios_modulate_clock_fu_98_clk_second_i,
        clk_second_o => grp_Advios_modulate_clock_fu_98_clk_second_o,
        clk_second_o_ap_vld => grp_Advios_modulate_clock_fu_98_clk_second_o_ap_vld);





    clk_second_assign_proc : process(clk)
    begin
        if (clk'event and clk =  '1') then
            if ((ap_const_logic_1 = grp_Advios_modulate_clock_fu_98_clk_second_o_ap_vld)) then 
                clk_second <= (0=>grp_Advios_modulate_clock_fu_98_clk_second_o, others=>'-');
            end if; 
        end if;
    end process;


    leds_assign_proc : process(clk)
    begin
        if (clk'event and clk =  '1') then
            if ((ap_const_logic_1 = grp_Advios_LedControl_fu_78_leds_ap_vld)) then 
                leds <= grp_Advios_LedControl_fu_78_leds;
            end if; 
        end if;
    end process;

    Advios_ssdm_threa_load_fu_116_p1 <= ap_const_lv1_0;
    ap_CS_fsm <= ap_const_lv2_0;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    grp_Advios_LedControl_fu_78_clk_second <= clk_second(0);
    grp_Advios_modulate_clock_fu_98_clk_second_i <= clk_second(0);
end behav;

	.file	"src/advios.cpp"
	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init,@function
__cxx_global_var_init:                  # @__cxx_global_var_init
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp2:
	.cfi_def_cfa_offset 16
.Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZStL8__ioinit, %rdi
	callq	_ZNSt8ios_base4InitC1Ev
	leaq	_ZNSt8ios_base4InitD1Ev, %rdi
	leaq	_ZStL8__ioinit, %rax
	leaq	__dso_handle, %rdx
	movq	%rax, %rsi
	callq	__cxa_atexit
	movl	%eax, -4(%rbp)          # 4-byte Spill
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp5:
	.size	__cxx_global_var_init, .Ltmp5-__cxx_global_var_init
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,"axG",@progbits,_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,comdat
	.weak	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi,@function
_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi: # @_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movl	%edx, -20(%rsp)
	ret
.Ltmp6:
	.size	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi, .Ltmp6-_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.cfi_endproc

	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	__cxx_global_var_init1,@function
__cxx_global_var_init1:                 # @__cxx_global_var_init1
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp9:
	.cfi_def_cfa_offset 16
.Ltmp10:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp11:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	leaq	_ZN7sc_coreL17api_version_checkE, %rax
	xorl	%esi, %esi
	movl	$_ZN7sc_coreL17api_version_checkE, %edi
	movq	%rax, -8(%rbp)          # 8-byte Spill
	callq	_ZN7sc_core20sc_api_version_2_3_1IXadL_ZNS_34SC_DISABLE_VIRTUAL_BIND_UNDEFINED_EEEEC1ENS_16sc_writer_policyE
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp12:
	.size	__cxx_global_var_init1, .Ltmp12-__cxx_global_var_init1
	.cfi_endproc

	.text
	.globl	_ZN6Advios4timeEv
	.align	16, 0x90
	.type	_ZN6Advios4timeEv,@function
_ZN6Advios4timeEv:                      # @_ZN6Advios4timeEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp15:
	.cfi_def_cfa_offset 16
.Ltmp16:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp17:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)         # 8-byte Spill
.LBB3_1:                                # =>This Inner Loop Header: Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN7sc_core9sc_module4waitEv
	leaq	-32(%rbp), %rdi
	movl	$0, %edx
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$992, %rax              # imm = 0x3E0
	movq	%rax, %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEppEi
	leaq	-32(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$992, %rax              # imm = 0x3E0
	movq	%rax, %rdi
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
	cmpq	$50000000, %rax         # imm = 0x2FAF080
	jbe	.LBB3_3
# BB#2:                                 #   in Loop: Header=BB3_1 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$1216, %rax             # imm = 0x4C0
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addq	$1384, %rcx             # imm = 0x568
	movq	%rcx, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNK7sc_core5sc_inIbE4readEv
	leaq	-33(%rbp), %rsi
	movb	(%rax), %dl
	xorb	$1, %dl
	andb	$1, %dl
	movb	%dl, -33(%rbp)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZN7sc_core8sc_inoutIbE5writeERKb
	movl	$0, %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$992, %rax              # imm = 0x3E0
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi32EEaSEi
	movq	%rax, -64(%rbp)         # 8-byte Spill
.LBB3_3:                                #   in Loop: Header=BB3_1 Depth=1
	jmp	.LBB3_1
.Ltmp18:
	.size	_ZN6Advios4timeEv, .Ltmp18-_ZN6Advios4timeEv
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_module4waitEv,"axG",@progbits,_ZN7sc_core9sc_module4waitEv,comdat
	.weak	_ZN7sc_core9sc_module4waitEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_module4waitEv,@function
_ZN7sc_core9sc_module4waitEv:           # @_ZN7sc_core9sc_module4waitEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp21:
	.cfi_def_cfa_offset 16
.Ltmp22:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp23:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_object10simcontextEv
	movq	%rax, %rdi
	callq	_ZN7sc_core4waitEPNS_13sc_simcontextE
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp24:
	.size	_ZN7sc_core9sc_module4waitEv, .Ltmp24-_ZN7sc_core9sc_module4waitEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEppEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEppEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEppEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEppEi,@function
_ZN5sc_dt7sc_uintILi32EEppEi:           # @_ZN5sc_dt7sc_uintILi32EEppEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin5:
	.cfi_lsda 3, .Lexception5
# BB#0:
	pushq	%rbp
.Ltmp33:
	.cfi_def_cfa_offset 16
.Ltmp34:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp35:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseppEi
.Ltmp25:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
.Ltmp26:
	jmp	.LBB5_1
.LBB5_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
	addq	$96, %rsp
	popq	%rbp
	ret
.LBB5_2:
.Ltmp27:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp28:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp29:
	jmp	.LBB5_3
.LBB5_3:
	jmp	.LBB5_4
.LBB5_4:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB5_5:
.Ltmp30:
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp36:
	.size	_ZN5sc_dt7sc_uintILi32EEppEi, .Ltmp36-_ZN5sc_dt7sc_uintILi32EEppEi
	.cfi_endproc
.Leh_func_end5:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table5:
.Lexception5:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
.Lset0 = .Leh_func_begin5-.Leh_func_begin5 # >> Call Site 1 <<
	.long	.Lset0
.Lset1 = .Ltmp25-.Leh_func_begin5       #   Call between .Leh_func_begin5 and .Ltmp25
	.long	.Lset1
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset2 = .Ltmp25-.Leh_func_begin5       # >> Call Site 2 <<
	.long	.Lset2
.Lset3 = .Ltmp26-.Ltmp25                #   Call between .Ltmp25 and .Ltmp26
	.long	.Lset3
.Lset4 = .Ltmp27-.Leh_func_begin5       #     jumps to .Ltmp27
	.long	.Lset4
	.byte	0                       #   On action: cleanup
.Lset5 = .Ltmp26-.Leh_func_begin5       # >> Call Site 3 <<
	.long	.Lset5
.Lset6 = .Ltmp28-.Ltmp26                #   Call between .Ltmp26 and .Ltmp28
	.long	.Lset6
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset7 = .Ltmp28-.Leh_func_begin5       # >> Call Site 4 <<
	.long	.Lset7
.Lset8 = .Ltmp29-.Ltmp28                #   Call between .Ltmp28 and .Ltmp29
	.long	.Lset8
.Lset9 = .Ltmp30-.Leh_func_begin5       #     jumps to .Ltmp30
	.long	.Lset9
	.byte	1                       #   On action: 1
.Lset10 = .Ltmp29-.Leh_func_begin5      # >> Call Site 5 <<
	.long	.Lset10
.Lset11 = .Leh_func_end5-.Ltmp29        #   Call between .Ltmp29 and .Leh_func_end5
	.long	.Lset11
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi32EED1Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED1Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED1Ev,@function
_ZN5sc_dt7sc_uintILi32EED1Ev:           # @_ZN5sc_dt7sc_uintILi32EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp39:
	.cfi_def_cfa_offset 16
.Ltmp40:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp41:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi32EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp42:
	.size	_ZN5sc_dt7sc_uintILi32EED1Ev, .Ltmp42-_ZN5sc_dt7sc_uintILi32EED1Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_basecvyEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_basecvyEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_basecvyEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_basecvyEv,@function
_ZNK5sc_dt12sc_uint_basecvyEv:          # @_ZNK5sc_dt12sc_uint_basecvyEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	ret
.Ltmp43:
	.size	_ZNK5sc_dt12sc_uint_basecvyEv, .Ltmp43-_ZNK5sc_dt12sc_uint_basecvyEv
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutIbE5writeERKb,"axG",@progbits,_ZN7sc_core8sc_inoutIbE5writeERKb,comdat
	.weak	_ZN7sc_core8sc_inoutIbE5writeERKb
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutIbE5writeERKb,@function
_ZN7sc_core8sc_inoutIbE5writeERKb:      # @_ZN7sc_core8sc_inoutIbE5writeERKb
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp46:
	.cfi_def_cfa_offset 16
.Ltmp47:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp48:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	movq	%rax, %rsi
	addq	$8, %rsi
	movq	8(%rax), %rax
	movq	32(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp49:
	.size	_ZN7sc_core8sc_inoutIbE5writeERKb, .Ltmp49-_ZN7sc_core8sc_inoutIbE5writeERKb
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIbE4readEv,"axG",@progbits,_ZNK7sc_core5sc_inIbE4readEv,comdat
	.weak	_ZNK7sc_core5sc_inIbE4readEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIbE4readEv,@function
_ZNK7sc_core5sc_inIbE4readEv:           # @_ZNK7sc_core5sc_inIbE4readEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp52:
	.cfi_def_cfa_offset 16
.Ltmp53:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp54:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	movq	(%rax), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-16(%rbp), %rax         # 8-byte Reload
	callq	*56(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp55:
	.size	_ZNK7sc_core5sc_inIbE4readEv, .Ltmp55-_ZNK7sc_core5sc_inIbE4readEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEaSEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEaSEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEaSEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEaSEi,@function
_ZN5sc_dt7sc_uintILi32EEaSEi:           # @_ZN5sc_dt7sc_uintILi32EEaSEi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp58:
	.cfi_def_cfa_offset 16
.Ltmp59:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp60:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movl	-12(%rbp), %esi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_baseaSEi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rdi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp61:
	.size	_ZN5sc_dt7sc_uintILi32EEaSEi, .Ltmp61-_ZN5sc_dt7sc_uintILi32EEaSEi
	.cfi_endproc

	.text
	.globl	_ZN6Advios11toggle_ledsEv
	.align	16, 0x90
	.type	_ZN6Advios11toggle_ledsEv,@function
_ZN6Advios11toggle_ledsEv:              # @_ZN6Advios11toggle_ledsEv
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin11:
	.cfi_lsda 3, .Lexception11
# BB#0:
	pushq	%rbp
.Ltmp110:
	.cfi_def_cfa_offset 16
.Ltmp111:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp112:
	.cfi_def_cfa_register %rbp
	subq	$240, %rsp
	movq	%rdi, -8(%rbp)
	leaq	-32(%rbp), %rax
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi4EEC1Ev
	movq	-128(%rbp), %rax        # 8-byte Reload
.Ltmp62:
	leaq	-56(%rbp), %rdi
	movq	%rax, -136(%rbp)        # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi4EEC1Ev
.Ltmp63:
	jmp	.LBB11_1
.LBB11_1:
	jmp	.LBB11_2
.LBB11_2:                               # =>This Inner Loop Header: Depth=1
	jmp	.LBB11_3
.LBB11_3:                               #   in Loop: Header=BB11_2 Depth=1
.Ltmp65:
	movq	-136(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core9sc_module4waitEv
.Ltmp66:
	jmp	.LBB11_4
.LBB11_4:                               #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$528, %rax              # imm = 0x210
.Ltmp67:
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv
.Ltmp68:
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jmp	.LBB11_5
.LBB11_5:                               #   in Loop: Header=BB11_2 Depth=1
.Ltmp69:
	leaq	-32(%rbp), %rdi
	movq	-144(%rbp), %rsi        # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi4EEaSERKS1_
.Ltmp70:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB11_6
.LBB11_6:                               #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$672, %rax              # imm = 0x2A0
.Ltmp71:
	movq	%rax, %rdi
	callq	_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv
.Ltmp72:
	movq	%rax, -160(%rbp)        # 8-byte Spill
	jmp	.LBB11_7
.LBB11_7:                               #   in Loop: Header=BB11_2 Depth=1
.Ltmp73:
	leaq	-56(%rbp), %rdi
	movq	-160(%rbp), %rsi        # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi4EEaSERKS1_
.Ltmp74:
	movq	%rax, -168(%rbp)        # 8-byte Spill
	jmp	.LBB11_8
.LBB11_8:                               #   in Loop: Header=BB11_2 Depth=1
	leaq	-32(%rbp), %rdi
.Ltmp75:
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
.Ltmp76:
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jmp	.LBB11_9
.LBB11_9:                               #   in Loop: Header=BB11_2 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	jne	.LBB11_22
# BB#10:                                #   in Loop: Header=BB11_2 Depth=1
	leaq	-56(%rbp), %rdi
.Ltmp90:
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
.Ltmp91:
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jmp	.LBB11_11
.LBB11_11:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-184(%rbp), %rax        # 8-byte Reload
	cmpq	$8, %rax
	jne	.LBB11_17
# BB#12:                                #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$968, %rax              # imm = 0x3C8
.Ltmp98:
	xorl	%esi, %esi
	movq	%rax, %rdi
	callq	_ZN5sc_dt7sc_uintILi4EEaSEi
.Ltmp99:
	movq	%rax, -192(%rbp)        # 8-byte Spill
	jmp	.LBB11_13
.LBB11_13:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$816, %rax              # imm = 0x330
	movq	-136(%rbp), %rcx        # 8-byte Reload
	addq	$968, %rcx              # imm = 0x3C8
.Ltmp100:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
.Ltmp101:
	jmp	.LBB11_14
.LBB11_14:                              #   in Loop: Header=BB11_2 Depth=1
	jmp	.LBB11_21
.LBB11_15:
.Ltmp64:
	movl	%edx, %ecx
	movq	%rax, -64(%rbp)
	movl	%ecx, -68(%rbp)
	jmp	.LBB11_33
.LBB11_16:
.Ltmp102:
	movl	%edx, %ecx
	movq	%rax, -64(%rbp)
	movl	%ecx, -68(%rbp)
	jmp	.LBB11_31
.LBB11_17:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$968, %rax              # imm = 0x3C8
.Ltmp92:
	leaq	-96(%rbp), %rdi
	xorl	%edx, %edx
	movq	%rax, %rsi
	callq	_ZN5sc_dt7sc_uintILi4EEppEi
.Ltmp93:
	jmp	.LBB11_18
.LBB11_18:                              #   in Loop: Header=BB11_2 Depth=1
.Ltmp94:
	leaq	-96(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp95:
	jmp	.LBB11_19
.LBB11_19:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$816, %rax              # imm = 0x330
	movq	-136(%rbp), %rcx        # 8-byte Reload
	addq	$968, %rcx              # imm = 0x3C8
.Ltmp96:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
.Ltmp97:
	jmp	.LBB11_20
.LBB11_20:                              #   in Loop: Header=BB11_2 Depth=1
	jmp	.LBB11_21
.LBB11_21:                              #   in Loop: Header=BB11_2 Depth=1
	jmp	.LBB11_30
.LBB11_22:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	addq	$816, %rax              # imm = 0x330
	leaq	-32(%rbp), %rdi
.Ltmp77:
	movq	%rax, -200(%rbp)        # 8-byte Spill
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
.Ltmp78:
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jmp	.LBB11_23
.LBB11_23:                              #   in Loop: Header=BB11_2 Depth=1
	leaq	-56(%rbp), %rdi
.Ltmp79:
	callq	_ZNK5sc_dt12sc_uint_basecvyEv
.Ltmp80:
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB11_24
.LBB11_24:                              #   in Loop: Header=BB11_2 Depth=1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movq	-216(%rbp), %rcx        # 8-byte Reload
	andq	%rcx, %rax
.Ltmp81:
	leaq	-120(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN5sc_dt7sc_uintILi4EEC1Ey
.Ltmp82:
	jmp	.LBB11_25
.LBB11_25:                              #   in Loop: Header=BB11_2 Depth=1
.Ltmp83:
	leaq	-120(%rbp), %rsi
	movq	-200(%rbp), %rdi        # 8-byte Reload
	callq	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
.Ltmp84:
	jmp	.LBB11_26
.LBB11_26:                              #   in Loop: Header=BB11_2 Depth=1
.Ltmp88:
	leaq	-120(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp89:
	jmp	.LBB11_27
.LBB11_27:                              #   in Loop: Header=BB11_2 Depth=1
	jmp	.LBB11_30
.LBB11_28:
.Ltmp85:
	movl	%edx, %ecx
	movq	%rax, -64(%rbp)
	movl	%ecx, -68(%rbp)
.Ltmp86:
	leaq	-120(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp87:
	jmp	.LBB11_29
.LBB11_29:
	jmp	.LBB11_31
.LBB11_30:                              #   in Loop: Header=BB11_2 Depth=1
	jmp	.LBB11_2
.LBB11_31:
.Ltmp103:
	leaq	-56(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp104:
	jmp	.LBB11_32
.LBB11_32:
	jmp	.LBB11_33
.LBB11_33:
.Ltmp105:
	leaq	-32(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp106:
	jmp	.LBB11_34
.LBB11_34:
	jmp	.LBB11_35
.LBB11_35:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume
.LBB11_36:
.Ltmp107:
	movq	%rax, -224(%rbp)        # 8-byte Spill
	movq	%rdx, -232(%rbp)        # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp113:
	.size	_ZN6Advios11toggle_ledsEv, .Ltmp113-_ZN6Advios11toggle_ledsEv
	.cfi_endproc
.Leh_func_end11:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table11:
.Lexception11:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\343\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	91                      # Call site table length
.Lset12 = .Leh_func_begin11-.Leh_func_begin11 # >> Call Site 1 <<
	.long	.Lset12
.Lset13 = .Ltmp62-.Leh_func_begin11     #   Call between .Leh_func_begin11 and .Ltmp62
	.long	.Lset13
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset14 = .Ltmp62-.Leh_func_begin11     # >> Call Site 2 <<
	.long	.Lset14
.Lset15 = .Ltmp63-.Ltmp62               #   Call between .Ltmp62 and .Ltmp63
	.long	.Lset15
.Lset16 = .Ltmp64-.Leh_func_begin11     #     jumps to .Ltmp64
	.long	.Lset16
	.byte	0                       #   On action: cleanup
.Lset17 = .Ltmp65-.Leh_func_begin11     # >> Call Site 3 <<
	.long	.Lset17
.Lset18 = .Ltmp82-.Ltmp65               #   Call between .Ltmp65 and .Ltmp82
	.long	.Lset18
.Lset19 = .Ltmp102-.Leh_func_begin11    #     jumps to .Ltmp102
	.long	.Lset19
	.byte	0                       #   On action: cleanup
.Lset20 = .Ltmp83-.Leh_func_begin11     # >> Call Site 4 <<
	.long	.Lset20
.Lset21 = .Ltmp84-.Ltmp83               #   Call between .Ltmp83 and .Ltmp84
	.long	.Lset21
.Lset22 = .Ltmp85-.Leh_func_begin11     #     jumps to .Ltmp85
	.long	.Lset22
	.byte	0                       #   On action: cleanup
.Lset23 = .Ltmp88-.Leh_func_begin11     # >> Call Site 5 <<
	.long	.Lset23
.Lset24 = .Ltmp89-.Ltmp88               #   Call between .Ltmp88 and .Ltmp89
	.long	.Lset24
.Lset25 = .Ltmp102-.Leh_func_begin11    #     jumps to .Ltmp102
	.long	.Lset25
	.byte	0                       #   On action: cleanup
.Lset26 = .Ltmp86-.Leh_func_begin11     # >> Call Site 6 <<
	.long	.Lset26
.Lset27 = .Ltmp106-.Ltmp86              #   Call between .Ltmp86 and .Ltmp106
	.long	.Lset27
.Lset28 = .Ltmp107-.Leh_func_begin11    #     jumps to .Ltmp107
	.long	.Lset28
	.byte	1                       #   On action: 1
.Lset29 = .Ltmp106-.Leh_func_begin11    # >> Call Site 7 <<
	.long	.Lset29
.Lset30 = .Leh_func_end11-.Ltmp106      #   Call between .Ltmp106 and .Leh_func_end11
	.long	.Lset30
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi4EEC1Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC1Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC1Ev,@function
_ZN5sc_dt7sc_uintILi4EEC1Ev:            # @_ZN5sc_dt7sc_uintILi4EEC1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp116:
	.cfi_def_cfa_offset 16
.Ltmp117:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp118:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp119:
	.size	_ZN5sc_dt7sc_uintILi4EEC1Ev, .Ltmp119-_ZN5sc_dt7sc_uintILi4EEC1Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEaSERKS1_,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEaSERKS1_,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEaSERKS1_
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEaSERKS1_,@function
_ZN5sc_dt7sc_uintILi4EEaSERKS1_:        # @_ZN5sc_dt7sc_uintILi4EEaSERKS1_
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	-16(%rsp), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, 8(%rsi)
	movq	%rsi, %rax
	ret
.Ltmp120:
	.size	_ZN5sc_dt7sc_uintILi4EEaSERKS1_, .Ltmp120-_ZN5sc_dt7sc_uintILi4EEaSERKS1_
	.cfi_endproc

	.section	.text._ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv,"axG",@progbits,_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv,comdat
	.weak	_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv
	.align	16, 0x90
	.type	_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv,@function
_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv: # @_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp123:
	.cfi_def_cfa_offset 16
.Ltmp124:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp125:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	movq	(%rax), %rdi
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	-16(%rbp), %rax         # 8-byte Reload
	callq	*40(%rax)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp126:
	.size	_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv, .Ltmp126-_ZNK7sc_core5sc_inIN5sc_dt7sc_uintILi4EEEE4readEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEaSEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEaSEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEaSEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEaSEi,@function
_ZN5sc_dt7sc_uintILi4EEaSEi:            # @_ZN5sc_dt7sc_uintILi4EEaSEi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp129:
	.cfi_def_cfa_offset 16
.Ltmp130:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp131:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movl	-12(%rbp), %esi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_baseaSEi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rdi, %rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp132:
	.size	_ZN5sc_dt7sc_uintILi4EEaSEi, .Ltmp132-_ZN5sc_dt7sc_uintILi4EEaSEi
	.cfi_endproc

	.section	.text._ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_,"axG",@progbits,_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_,comdat
	.weak	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
	.align	16, 0x90
	.type	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_,@function
_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_: # @_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp135:
	.cfi_def_cfa_offset 16
.Ltmp136:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp137:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	callq	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	movq	%rax, %rsi
	addq	$8, %rsi
	movq	8(%rax), %rax
	movq	32(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-24(%rbp), %rsi         # 8-byte Reload
	callq	*%rax
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp138:
	.size	_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_, .Ltmp138-_ZN7sc_core8sc_inoutIN5sc_dt7sc_uintILi4EEEE5writeERKS3_
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEppEi,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEppEi,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEppEi
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEppEi,@function
_ZN5sc_dt7sc_uintILi4EEppEi:            # @_ZN5sc_dt7sc_uintILi4EEppEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin17:
	.cfi_lsda 3, .Lexception17
# BB#0:
	pushq	%rbp
.Ltmp147:
	.cfi_def_cfa_offset 16
.Ltmp148:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp149:
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-40(%rbp), %rcx
	xorl	%edx, %edx
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseppEi
.Ltmp139:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	callq	_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE
.Ltmp140:
	jmp	.LBB17_1
.LBB17_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
	addq	$96, %rsp
	popq	%rbp
	ret
.LBB17_2:
.Ltmp141:
	movl	%edx, %ecx
	movq	%rax, -48(%rbp)
	movl	%ecx, -52(%rbp)
.Ltmp142:
	leaq	-40(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp143:
	jmp	.LBB17_3
.LBB17_3:
	jmp	.LBB17_4
.LBB17_4:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume
.LBB17_5:
.Ltmp144:
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp150:
	.size	_ZN5sc_dt7sc_uintILi4EEppEi, .Ltmp150-_ZN5sc_dt7sc_uintILi4EEppEi
	.cfi_endproc
.Leh_func_end17:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table17:
.Lexception17:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.byte	73                      # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	65                      # Call site table length
.Lset31 = .Leh_func_begin17-.Leh_func_begin17 # >> Call Site 1 <<
	.long	.Lset31
.Lset32 = .Ltmp139-.Leh_func_begin17    #   Call between .Leh_func_begin17 and .Ltmp139
	.long	.Lset32
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset33 = .Ltmp139-.Leh_func_begin17    # >> Call Site 2 <<
	.long	.Lset33
.Lset34 = .Ltmp140-.Ltmp139             #   Call between .Ltmp139 and .Ltmp140
	.long	.Lset34
.Lset35 = .Ltmp141-.Leh_func_begin17    #     jumps to .Ltmp141
	.long	.Lset35
	.byte	0                       #   On action: cleanup
.Lset36 = .Ltmp140-.Leh_func_begin17    # >> Call Site 3 <<
	.long	.Lset36
.Lset37 = .Ltmp142-.Ltmp140             #   Call between .Ltmp140 and .Ltmp142
	.long	.Lset37
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset38 = .Ltmp142-.Leh_func_begin17    # >> Call Site 4 <<
	.long	.Lset38
.Lset39 = .Ltmp143-.Ltmp142             #   Call between .Ltmp142 and .Ltmp143
	.long	.Lset39
.Lset40 = .Ltmp144-.Leh_func_begin17    #     jumps to .Ltmp144
	.long	.Lset40
	.byte	1                       #   On action: 1
.Lset41 = .Ltmp143-.Leh_func_begin17    # >> Call Site 5 <<
	.long	.Lset41
.Lset42 = .Leh_func_end17-.Ltmp143      #   Call between .Ltmp143 and .Leh_func_end17
	.long	.Lset42
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi4EED1Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EED1Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EED1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EED1Ev,@function
_ZN5sc_dt7sc_uintILi4EED1Ev:            # @_ZN5sc_dt7sc_uintILi4EED1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp153:
	.cfi_def_cfa_offset 16
.Ltmp154:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp155:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt7sc_uintILi4EED2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp156:
	.size	_ZN5sc_dt7sc_uintILi4EED1Ev, .Ltmp156-_ZN5sc_dt7sc_uintILi4EED1Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEC1Ey,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC1Ey,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC1Ey
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC1Ey,@function
_ZN5sc_dt7sc_uintILi4EEC1Ey:            # @_ZN5sc_dt7sc_uintILi4EEC1Ey
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp159:
	.cfi_def_cfa_offset 16
.Ltmp160:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp161:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt7sc_uintILi4EEC2Ey
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp162:
	.size	_ZN5sc_dt7sc_uintILi4EEC1Ey, .Ltmp162-_ZN5sc_dt7sc_uintILi4EEC1Ey
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD1Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD1Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD1Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD1Ev,@function
_ZN7sc_core18sc_process_monitorD1Ev:    # @_ZN7sc_core18sc_process_monitorD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp165:
	.cfi_def_cfa_offset 16
.Ltmp166:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp167:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN7sc_core18sc_process_monitorD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp168:
	.size	_ZN7sc_core18sc_process_monitorD1Ev, .Ltmp168-_ZN7sc_core18sc_process_monitorD1Ev
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD0Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD0Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD0Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD0Ev,@function
_ZN7sc_core18sc_process_monitorD0Ev:    # @_ZN7sc_core18sc_process_monitorD0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin21:
	.cfi_lsda 3, .Lexception21
# BB#0:
	pushq	%rbp
.Ltmp174:
	.cfi_def_cfa_offset 16
.Ltmp175:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp176:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp169:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN7sc_core18sc_process_monitorD1Ev
.Ltmp170:
	jmp	.LBB21_1
.LBB21_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB21_2:
.Ltmp171:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp177:
	.size	_ZN7sc_core18sc_process_monitorD0Ev, .Ltmp177-_ZN7sc_core18sc_process_monitorD0Ev
	.cfi_endproc
.Leh_func_end21:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table21:
.Lexception21:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset43 = .Ltmp169-.Leh_func_begin21    # >> Call Site 1 <<
	.long	.Lset43
.Lset44 = .Ltmp170-.Ltmp169             #   Call between .Ltmp169 and .Ltmp170
	.long	.Lset44
.Lset45 = .Ltmp171-.Leh_func_begin21    #     jumps to .Ltmp171
	.long	.Lset45
	.byte	0                       #   On action: cleanup
.Lset46 = .Ltmp170-.Leh_func_begin21    # >> Call Site 2 <<
	.long	.Lset46
.Lset47 = .Leh_func_end21-.Ltmp170      #   Call between .Ltmp170 and .Leh_func_end21
	.long	.Lset47
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi4EEC2Ey,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC2Ey,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC2Ey
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC2Ey,@function
_ZN5sc_dt7sc_uintILi4EEC2Ey:            # @_ZN5sc_dt7sc_uintILi4EEC2Ey
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp180:
	.cfi_def_cfa_offset 16
.Ltmp181:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp182:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$4, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN5sc_dt12sc_uint_baseC2Eyi
	leaq	_ZTVN5sc_dt7sc_uintILi4EEE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp183:
	.size	_ZN5sc_dt7sc_uintILi4EEC2Ey, .Ltmp183-_ZN5sc_dt7sc_uintILi4EEC2Ey
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseC2Eyi,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC2Eyi,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC2Eyi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC2Eyi,@function
_ZN5sc_dt12sc_uint_baseC2Eyi:           # @_ZN5sc_dt12sc_uint_baseC2Eyi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin23:
	.cfi_lsda 3, .Lexception23
# BB#0:
	pushq	%rbp
.Ltmp194:
	.cfi_def_cfa_offset 16
.Ltmp195:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp196:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt13sc_value_baseC2Ev
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	$_ZTVN5sc_dt12sc_uint_baseE+16, (%rsi)
	movq	-16(%rbp), %rdi
	movq	%rdi, 8(%rsi)
	movl	-20(%rbp), %edx
	movl	%edx, 16(%rsi)
	movl	$64, %eax
	subl	%edx, %eax
	movl	%eax, 20(%rsi)
.Ltmp184:
	movq	%rsi, %rdi
	callq	_ZNK5sc_dt12sc_uint_base12check_lengthEv
.Ltmp185:
	jmp	.LBB23_1
.LBB23_1:
.Ltmp186:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
.Ltmp187:
	jmp	.LBB23_2
.LBB23_2:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB23_3:
.Ltmp188:
	movl	%edx, %ecx
	movq	%rax, -32(%rbp)
	movl	%ecx, -36(%rbp)
.Ltmp189:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt13sc_value_baseD2Ev
.Ltmp190:
	jmp	.LBB23_4
.LBB23_4:
	jmp	.LBB23_5
.LBB23_5:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume
.LBB23_6:
.Ltmp191:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp197:
	.size	_ZN5sc_dt12sc_uint_baseC2Eyi, .Ltmp197-_ZN5sc_dt12sc_uint_baseC2Eyi
	.cfi_endproc
.Leh_func_end23:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table23:
.Lexception23:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\257\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset48 = .Ltmp184-.Leh_func_begin23    # >> Call Site 1 <<
	.long	.Lset48
.Lset49 = .Ltmp187-.Ltmp184             #   Call between .Ltmp184 and .Ltmp187
	.long	.Lset49
.Lset50 = .Ltmp188-.Leh_func_begin23    #     jumps to .Ltmp188
	.long	.Lset50
	.byte	0                       #   On action: cleanup
.Lset51 = .Ltmp189-.Leh_func_begin23    # >> Call Site 2 <<
	.long	.Lset51
.Lset52 = .Ltmp190-.Ltmp189             #   Call between .Ltmp189 and .Ltmp190
	.long	.Lset52
.Lset53 = .Ltmp191-.Leh_func_begin23    #     jumps to .Ltmp191
	.long	.Lset53
	.byte	1                       #   On action: 1
.Lset54 = .Ltmp190-.Leh_func_begin23    # >> Call Site 3 <<
	.long	.Lset54
.Lset55 = .Leh_func_end23-.Ltmp190      #   Call between .Ltmp190 and .Leh_func_end23
	.long	.Lset55
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,"axG",@progbits,_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,comdat
	.weak	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev,@function
_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev: # @_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	8(%rdi), %rax
	ret
.Ltmp198:
	.size	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev, .Ltmp198-_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_base13concat_lengthEPb,"axG",@progbits,_ZNK5sc_dt12sc_uint_base13concat_lengthEPb,comdat
	.weak	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb,@function
_ZNK5sc_dt12sc_uint_base13concat_lengthEPb: # @_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp201:
	.cfi_def_cfa_offset 16
.Ltmp202:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp203:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, -16(%rbp)
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	je	.LBB25_2
# BB#1:
	movq	-16(%rbp), %rax
	movb	$0, (%rax)
.LBB25_2:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK5sc_dt12sc_uint_base6lengthEv
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp204:
	.size	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb, .Ltmp204-_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EED0Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EED0Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EED0Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EED0Ev,@function
_ZN5sc_dt7sc_uintILi4EED0Ev:            # @_ZN5sc_dt7sc_uintILi4EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin26:
	.cfi_lsda 3, .Lexception26
# BB#0:
	pushq	%rbp
.Ltmp210:
	.cfi_def_cfa_offset 16
.Ltmp211:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp212:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp205:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi4EED1Ev
.Ltmp206:
	jmp	.LBB26_1
.LBB26_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB26_2:
.Ltmp207:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp213:
	.size	_ZN5sc_dt7sc_uintILi4EED0Ev, .Ltmp213-_ZN5sc_dt7sc_uintILi4EED0Ev
	.cfi_endproc
.Leh_func_end26:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table26:
.Lexception26:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset56 = .Ltmp205-.Leh_func_begin26    # >> Call Site 1 <<
	.long	.Lset56
.Lset57 = .Ltmp206-.Ltmp205             #   Call between .Ltmp205 and .Ltmp206
	.long	.Lset57
.Lset58 = .Ltmp207-.Leh_func_begin26    #     jumps to .Ltmp207
	.long	.Lset58
	.byte	0                       #   On action: cleanup
.Lset59 = .Ltmp206-.Leh_func_begin26    # >> Call Site 2 <<
	.long	.Lset59
.Lset60 = .Leh_func_end26-.Ltmp206      #   Call between .Ltmp206 and .Leh_func_end26
	.long	.Lset60
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZNK5sc_dt12sc_uint_base6lengthEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_base6lengthEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_base6lengthEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base6lengthEv,@function
_ZNK5sc_dt12sc_uint_base6lengthEv:      # @_ZNK5sc_dt12sc_uint_base6lengthEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movl	16(%rdi), %eax
	ret
.Ltmp214:
	.size	_ZNK5sc_dt12sc_uint_base6lengthEv, .Ltmp214-_ZNK5sc_dt12sc_uint_base6lengthEv
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseC2Ev,"axG",@progbits,_ZN5sc_dt13sc_value_baseC2Ev,comdat
	.weak	_ZN5sc_dt13sc_value_baseC2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseC2Ev,@function
_ZN5sc_dt13sc_value_baseC2Ev:           # @_ZN5sc_dt13sc_value_baseC2Ev
	.cfi_startproc
# BB#0:
	leaq	_ZTVN5sc_dt13sc_value_baseE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	%rax, (%rdi)
	ret
.Ltmp215:
	.size	_ZN5sc_dt13sc_value_baseC2Ev, .Ltmp215-_ZN5sc_dt13sc_value_baseC2Ev
	.cfi_endproc

	.section	.text._ZNK5sc_dt12sc_uint_base12check_lengthEv,"axG",@progbits,_ZNK5sc_dt12sc_uint_base12check_lengthEv,comdat
	.weak	_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.align	16, 0x90
	.type	_ZNK5sc_dt12sc_uint_base12check_lengthEv,@function
_ZNK5sc_dt12sc_uint_base12check_lengthEv: # @_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp218:
	.cfi_def_cfa_offset 16
.Ltmp219:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp220:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpl	$0, 16(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jle	.LBB29_2
# BB#1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	cmpl	$64, 16(%rax)
	jle	.LBB29_3
.LBB29_2:
	movq	-16(%rbp), %rdi         # 8-byte Reload
	callq	_ZNK5sc_dt12sc_uint_base14invalid_lengthEv
.LBB29_3:
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp221:
	.size	_ZNK5sc_dt12sc_uint_base12check_lengthEv, .Ltmp221-_ZNK5sc_dt12sc_uint_base12check_lengthEv
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_base11extend_signEv,"axG",@progbits,_ZN5sc_dt12sc_uint_base11extend_signEv,comdat
	.weak	_ZN5sc_dt12sc_uint_base11extend_signEv
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_base11extend_signEv,@function
_ZN5sc_dt12sc_uint_base11extend_signEv: # @_ZN5sc_dt12sc_uint_base11extend_signEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	_ZN5sc_dt9UINT_ZEROE, %rax
	xorq	$-1, %rax
	movl	20(%rdi), %ecx
                                        # kill: CL<def> RCX<kill>
	shrq	%cl, %rax
	movq	8(%rdi), %rdx
	andq	%rax, %rdx
	movq	%rdx, 8(%rdi)
	ret
.Ltmp222:
	.size	_ZN5sc_dt12sc_uint_base11extend_signEv, .Ltmp222-_ZN5sc_dt12sc_uint_base11extend_signEv
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseD2Ev,"axG",@progbits,_ZN5sc_dt13sc_value_baseD2Ev,comdat
	.weak	_ZN5sc_dt13sc_value_baseD2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseD2Ev,@function
_ZN5sc_dt13sc_value_baseD2Ev:           # @_ZN5sc_dt13sc_value_baseD2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp223:
	.size	_ZN5sc_dt13sc_value_baseD2Ev, .Ltmp223-_ZN5sc_dt13sc_value_baseD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp226:
	.cfi_def_cfa_offset 16
.Ltmp227:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp228:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp229:
	.size	_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE, .Ltmp229-_ZN5sc_dt7sc_uintILi4EEC1ERKNS_12sc_uint_baseE
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseppEi,"axG",@progbits,_ZN5sc_dt12sc_uint_baseppEi,comdat
	.weak	_ZN5sc_dt12sc_uint_baseppEi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseppEi,@function
_ZN5sc_dt12sc_uint_baseppEi:            # @_ZN5sc_dt12sc_uint_baseppEi
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin33:
	.cfi_lsda 3, .Lexception33
# BB#0:
	pushq	%rbp
.Ltmp238:
	.cfi_def_cfa_offset 16
.Ltmp239:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp240:
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, %rax
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	movq	-8(%rbp), %rsi
	movb	$0, -13(%rbp)
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_baseC1ERKS0_
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rsi
	incq	%rsi
	movq	%rsi, 8(%rax)
.Ltmp230:
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
.Ltmp231:
	jmp	.LBB33_1
.LBB33_1:
	movb	$1, -13(%rbp)
	movl	$1, -32(%rbp)
	testb	$1, -13(%rbp)
	jne	.LBB33_4
	jmp	.LBB33_3
.LBB33_2:
.Ltmp232:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp233:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.Ltmp234:
	jmp	.LBB33_5
.LBB33_3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD1Ev
.LBB33_4:
	addq	$80, %rsp
	popq	%rbp
	ret
.LBB33_5:
	jmp	.LBB33_6
.LBB33_6:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB33_7:
.Ltmp235:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp241:
	.size	_ZN5sc_dt12sc_uint_baseppEi, .Ltmp241-_ZN5sc_dt12sc_uint_baseppEi
	.cfi_endproc
.Leh_func_end33:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table33:
.Lexception33:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset61 = .Leh_func_begin33-.Leh_func_begin33 # >> Call Site 1 <<
	.long	.Lset61
.Lset62 = .Ltmp230-.Leh_func_begin33    #   Call between .Leh_func_begin33 and .Ltmp230
	.long	.Lset62
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset63 = .Ltmp230-.Leh_func_begin33    # >> Call Site 2 <<
	.long	.Lset63
.Lset64 = .Ltmp231-.Ltmp230             #   Call between .Ltmp230 and .Ltmp231
	.long	.Lset64
.Lset65 = .Ltmp232-.Leh_func_begin33    #     jumps to .Ltmp232
	.long	.Lset65
	.byte	0                       #   On action: cleanup
.Lset66 = .Ltmp233-.Leh_func_begin33    # >> Call Site 3 <<
	.long	.Lset66
.Lset67 = .Ltmp234-.Ltmp233             #   Call between .Ltmp233 and .Ltmp234
	.long	.Lset67
.Lset68 = .Ltmp235-.Leh_func_begin33    #     jumps to .Ltmp235
	.long	.Lset68
	.byte	1                       #   On action: 1
.Lset69 = .Ltmp234-.Leh_func_begin33    # >> Call Site 4 <<
	.long	.Lset69
.Lset70 = .Leh_func_end33-.Ltmp234      #   Call between .Ltmp234 and .Leh_func_end33
	.long	.Lset70
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseD1Ev,"axG",@progbits,_ZN5sc_dt12sc_uint_baseD1Ev,comdat
	.weak	_ZN5sc_dt12sc_uint_baseD1Ev
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseD1Ev,@function
_ZN5sc_dt12sc_uint_baseD1Ev:            # @_ZN5sc_dt12sc_uint_baseD1Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp244:
	.cfi_def_cfa_offset 16
.Ltmp245:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp246:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp247:
	.size	_ZN5sc_dt12sc_uint_baseD1Ev, .Ltmp247-_ZN5sc_dt12sc_uint_baseD1Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseD2Ev,"axG",@progbits,_ZN5sc_dt12sc_uint_baseD2Ev,comdat
	.weak	_ZN5sc_dt12sc_uint_baseD2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseD2Ev,@function
_ZN5sc_dt12sc_uint_baseD2Ev:            # @_ZN5sc_dt12sc_uint_baseD2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp250:
	.cfi_def_cfa_offset 16
.Ltmp251:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp252:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt13sc_value_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp253:
	.size	_ZN5sc_dt12sc_uint_baseD2Ev, .Ltmp253-_ZN5sc_dt12sc_uint_baseD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseC1ERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC1ERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC1ERKS0_,@function
_ZN5sc_dt12sc_uint_baseC1ERKS0_:        # @_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp256:
	.cfi_def_cfa_offset 16
.Ltmp257:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp258:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt12sc_uint_baseC2ERKS0_
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp259:
	.size	_ZN5sc_dt12sc_uint_baseC1ERKS0_, .Ltmp259-_ZN5sc_dt12sc_uint_baseC1ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt12sc_uint_baseC2ERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC2ERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC2ERKS0_,@function
_ZN5sc_dt12sc_uint_baseC2ERKS0_:        # @_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp262:
	.cfi_def_cfa_offset 16
.Ltmp263:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp264:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, %rdi
	movq	-16(%rbp), %rax
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rsi
	callq	_ZN5sc_dt13sc_value_baseC2ERKS0_
	leaq	_ZTVN5sc_dt12sc_uint_baseE, %rax
	addq	$16, %rax
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, 8(%rsi)
	movq	-16(%rbp), %rax
	movl	16(%rax), %ecx
	movl	%ecx, 16(%rsi)
	movq	-16(%rbp), %rax
	movl	20(%rax), %ecx
	movl	%ecx, 20(%rsi)
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp265:
	.size	_ZN5sc_dt12sc_uint_baseC2ERKS0_, .Ltmp265-_ZN5sc_dt12sc_uint_baseC2ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt13sc_value_baseC2ERKS0_,"axG",@progbits,_ZN5sc_dt13sc_value_baseC2ERKS0_,comdat
	.weak	_ZN5sc_dt13sc_value_baseC2ERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt13sc_value_baseC2ERKS0_,@function
_ZN5sc_dt13sc_value_baseC2ERKS0_:       # @_ZN5sc_dt13sc_value_baseC2ERKS0_
	.cfi_startproc
# BB#0:
	leaq	_ZTVN5sc_dt13sc_value_baseE, %rax
	addq	$16, %rax
	movq	%rdi, -8(%rsp)
	movq	%rsi, -16(%rsp)
	movq	-8(%rsp), %rsi
	movq	%rax, (%rsi)
	ret
.Ltmp266:
	.size	_ZN5sc_dt13sc_value_baseC2ERKS0_, .Ltmp266-_ZN5sc_dt13sc_value_baseC2ERKS0_
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin39:
	.cfi_lsda 3, .Lexception39
# BB#0:
	pushq	%rbp
.Ltmp275:
	.cfi_def_cfa_offset 16
.Ltmp276:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp277:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movl	$4, %eax
	movq	%rsi, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movl	%eax, %esi
	callq	_ZN5sc_dt12sc_uint_baseC2Ei
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	$_ZTVN5sc_dt7sc_uintILi4EEE+16, (%rdi)
	movq	-16(%rbp), %rsi
.Ltmp267:
	callq	_ZN5sc_dt12sc_uint_baseaSERKS0_
.Ltmp268:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB39_1
.LBB39_1:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB39_2:
.Ltmp269:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp270:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
.Ltmp271:
	jmp	.LBB39_3
.LBB39_3:
	jmp	.LBB39_4
.LBB39_4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB39_5:
.Ltmp272:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp278:
	.size	_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE, .Ltmp278-_ZN5sc_dt7sc_uintILi4EEC2ERKNS_12sc_uint_baseE
	.cfi_endproc
.Leh_func_end39:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table39:
.Lexception39:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset71 = .Leh_func_begin39-.Leh_func_begin39 # >> Call Site 1 <<
	.long	.Lset71
.Lset72 = .Ltmp267-.Leh_func_begin39    #   Call between .Leh_func_begin39 and .Ltmp267
	.long	.Lset72
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset73 = .Ltmp267-.Leh_func_begin39    # >> Call Site 2 <<
	.long	.Lset73
.Lset74 = .Ltmp268-.Ltmp267             #   Call between .Ltmp267 and .Ltmp268
	.long	.Lset74
.Lset75 = .Ltmp269-.Leh_func_begin39    #     jumps to .Ltmp269
	.long	.Lset75
	.byte	0                       #   On action: cleanup
.Lset76 = .Ltmp270-.Leh_func_begin39    # >> Call Site 3 <<
	.long	.Lset76
.Lset77 = .Ltmp271-.Ltmp270             #   Call between .Ltmp270 and .Ltmp271
	.long	.Lset77
.Lset78 = .Ltmp272-.Leh_func_begin39    #     jumps to .Ltmp272
	.long	.Lset78
	.byte	1                       #   On action: 1
.Lset79 = .Ltmp271-.Leh_func_begin39    # >> Call Site 4 <<
	.long	.Lset79
.Lset80 = .Leh_func_end39-.Ltmp271      #   Call between .Ltmp271 and .Leh_func_end39
	.long	.Lset80
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseC2Ei,"axG",@progbits,_ZN5sc_dt12sc_uint_baseC2Ei,comdat
	.weak	_ZN5sc_dt12sc_uint_baseC2Ei
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseC2Ei,@function
_ZN5sc_dt12sc_uint_baseC2Ei:            # @_ZN5sc_dt12sc_uint_baseC2Ei
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin40:
	.cfi_lsda 3, .Lexception40
# BB#0:
	pushq	%rbp
.Ltmp287:
	.cfi_def_cfa_offset 16
.Ltmp288:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp289:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt13sc_value_baseC2Ev
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	$_ZTVN5sc_dt12sc_uint_baseE+16, (%rdi)
	movq	$0, 8(%rdi)
	movl	-12(%rbp), %esi
	movl	%esi, 16(%rdi)
	movl	$64, %eax
	subl	%esi, %eax
	movl	%eax, 20(%rdi)
.Ltmp279:
	callq	_ZNK5sc_dt12sc_uint_base12check_lengthEv
.Ltmp280:
	jmp	.LBB40_1
.LBB40_1:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB40_2:
.Ltmp281:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp282:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt13sc_value_baseD2Ev
.Ltmp283:
	jmp	.LBB40_3
.LBB40_3:
	jmp	.LBB40_4
.LBB40_4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB40_5:
.Ltmp284:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp290:
	.size	_ZN5sc_dt12sc_uint_baseC2Ei, .Ltmp290-_ZN5sc_dt12sc_uint_baseC2Ei
	.cfi_endproc
.Leh_func_end40:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table40:
.Lexception40:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\257\200"             # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	39                      # Call site table length
.Lset81 = .Ltmp279-.Leh_func_begin40    # >> Call Site 1 <<
	.long	.Lset81
.Lset82 = .Ltmp280-.Ltmp279             #   Call between .Ltmp279 and .Ltmp280
	.long	.Lset82
.Lset83 = .Ltmp281-.Leh_func_begin40    #     jumps to .Ltmp281
	.long	.Lset83
	.byte	0                       #   On action: cleanup
.Lset84 = .Ltmp282-.Leh_func_begin40    # >> Call Site 2 <<
	.long	.Lset84
.Lset85 = .Ltmp283-.Ltmp282             #   Call between .Ltmp282 and .Ltmp283
	.long	.Lset85
.Lset86 = .Ltmp284-.Leh_func_begin40    #     jumps to .Ltmp284
	.long	.Lset86
	.byte	1                       #   On action: 1
.Lset87 = .Ltmp283-.Leh_func_begin40    # >> Call Site 3 <<
	.long	.Lset87
.Lset88 = .Leh_func_end40-.Ltmp283      #   Call between .Ltmp283 and .Leh_func_end40
	.long	.Lset88
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseaSERKS0_,"axG",@progbits,_ZN5sc_dt12sc_uint_baseaSERKS0_,comdat
	.weak	_ZN5sc_dt12sc_uint_baseaSERKS0_
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseaSERKS0_,@function
_ZN5sc_dt12sc_uint_baseaSERKS0_:        # @_ZN5sc_dt12sc_uint_baseaSERKS0_
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp293:
	.cfi_def_cfa_offset 16
.Ltmp294:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp295:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, 8(%rsi)
	movq	%rsi, %rdi
	movq	%rsi, -24(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp296:
	.size	_ZN5sc_dt12sc_uint_baseaSERKS0_, .Ltmp296-_ZN5sc_dt12sc_uint_baseaSERKS0_
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp299:
	.cfi_def_cfa_offset 16
.Ltmp300:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp301:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB42_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB42_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp302:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv, .Ltmp302-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp305:
	.cfi_def_cfa_offset 16
.Ltmp306:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp307:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB43_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB43_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp308:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv, .Ltmp308-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIN5sc_dt7sc_uintILi4EEEEEEptEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp311:
	.cfi_def_cfa_offset 16
.Ltmp312:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp313:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp314:
	.size	_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE, .Ltmp314-_ZN5sc_dt7sc_uintILi32EEC1ERKNS_12sc_uint_baseE
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE,@function
_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE: # @_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin45:
	.cfi_lsda 3, .Lexception45
# BB#0:
	pushq	%rbp
.Ltmp323:
	.cfi_def_cfa_offset 16
.Ltmp324:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp325:
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movl	$32, %eax
	movq	%rsi, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movl	%eax, %esi
	callq	_ZN5sc_dt12sc_uint_baseC2Ei
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	$_ZTVN5sc_dt7sc_uintILi32EEE+16, (%rdi)
	movq	-16(%rbp), %rsi
.Ltmp315:
	callq	_ZN5sc_dt12sc_uint_baseaSERKS0_
.Ltmp316:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB45_1
.LBB45_1:
	addq	$64, %rsp
	popq	%rbp
	ret
.LBB45_2:
.Ltmp317:
	movl	%edx, %ecx
	movq	%rax, -24(%rbp)
	movl	%ecx, -28(%rbp)
.Ltmp318:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
.Ltmp319:
	jmp	.LBB45_3
.LBB45_3:
	jmp	.LBB45_4
.LBB45_4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume
.LBB45_5:
.Ltmp320:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	_ZSt9terminatev
.Ltmp326:
	.size	_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE, .Ltmp326-_ZN5sc_dt7sc_uintILi32EEC2ERKNS_12sc_uint_baseE
	.cfi_endproc
.Leh_func_end45:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table45:
.Lexception45:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\274"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	52                      # Call site table length
.Lset89 = .Leh_func_begin45-.Leh_func_begin45 # >> Call Site 1 <<
	.long	.Lset89
.Lset90 = .Ltmp315-.Leh_func_begin45    #   Call between .Leh_func_begin45 and .Ltmp315
	.long	.Lset90
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lset91 = .Ltmp315-.Leh_func_begin45    # >> Call Site 2 <<
	.long	.Lset91
.Lset92 = .Ltmp316-.Ltmp315             #   Call between .Ltmp315 and .Ltmp316
	.long	.Lset92
.Lset93 = .Ltmp317-.Leh_func_begin45    #     jumps to .Ltmp317
	.long	.Lset93
	.byte	0                       #   On action: cleanup
.Lset94 = .Ltmp318-.Leh_func_begin45    # >> Call Site 3 <<
	.long	.Lset94
.Lset95 = .Ltmp319-.Ltmp318             #   Call between .Ltmp318 and .Ltmp319
	.long	.Lset95
.Lset96 = .Ltmp320-.Leh_func_begin45    #     jumps to .Ltmp320
	.long	.Lset96
	.byte	1                       #   On action: 1
.Lset97 = .Ltmp319-.Leh_func_begin45    # >> Call Site 4 <<
	.long	.Lset97
.Lset98 = .Leh_func_end45-.Ltmp319      #   Call between .Ltmp319 and .Leh_func_end45
	.long	.Lset98
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
                                        # >> Catch TypeInfos <<
	.long	0                       # TypeInfo 1
	.align	4

	.section	.text._ZN5sc_dt7sc_uintILi32EED0Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED0Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED0Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED0Ev,@function
_ZN5sc_dt7sc_uintILi32EED0Ev:           # @_ZN5sc_dt7sc_uintILi32EED0Ev
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
.Leh_func_begin46:
	.cfi_lsda 3, .Lexception46
# BB#0:
	pushq	%rbp
.Ltmp332:
	.cfi_def_cfa_offset 16
.Ltmp333:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp334:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rdi, %rax
.Ltmp327:
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt7sc_uintILi32EED1Ev
.Ltmp328:
	jmp	.LBB46_1
.LBB46_1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
	addq	$32, %rsp
	popq	%rbp
	ret
.LBB46_2:
.Ltmp329:
	movl	%edx, %ecx
	movq	%rax, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv
# BB#3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume
.Ltmp335:
	.size	_ZN5sc_dt7sc_uintILi32EED0Ev, .Ltmp335-_ZN5sc_dt7sc_uintILi32EED0Ev
	.cfi_endproc
.Leh_func_end46:
	.section	.gcc_except_table,"a",@progbits
	.align	4
GCC_except_table46:
.Lexception46:
	.byte	255                     # @LPStart Encoding = omit
	.byte	3                       # @TType Encoding = udata4
	.asciz	 "\234"                 # @TType base offset
	.byte	3                       # Call site Encoding = udata4
	.byte	26                      # Call site table length
.Lset99 = .Ltmp327-.Leh_func_begin46    # >> Call Site 1 <<
	.long	.Lset99
.Lset100 = .Ltmp328-.Ltmp327            #   Call between .Ltmp327 and .Ltmp328
	.long	.Lset100
.Lset101 = .Ltmp329-.Leh_func_begin46   #     jumps to .Ltmp329
	.long	.Lset101
	.byte	0                       #   On action: cleanup
.Lset102 = .Ltmp328-.Leh_func_begin46   # >> Call Site 2 <<
	.long	.Lset102
.Lset103 = .Leh_func_end46-.Ltmp328     #   Call between .Ltmp328 and .Leh_func_end46
	.long	.Lset103
	.long	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.align	4

	.section	.text._ZN5sc_dt12sc_uint_baseaSEi,"axG",@progbits,_ZN5sc_dt12sc_uint_baseaSEi,comdat
	.weak	_ZN5sc_dt12sc_uint_baseaSEi
	.align	16, 0x90
	.type	_ZN5sc_dt12sc_uint_baseaSEi,@function
_ZN5sc_dt12sc_uint_baseaSEi:            # @_ZN5sc_dt12sc_uint_baseaSEi
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp338:
	.cfi_def_cfa_offset 16
.Ltmp339:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp340:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movslq	-12(%rbp), %rax
	movq	%rax, 8(%rdi)
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	callq	_ZN5sc_dt12sc_uint_base11extend_signEv
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	ret
.Ltmp341:
	.size	_ZN5sc_dt12sc_uint_baseaSEi, .Ltmp341-_ZN5sc_dt12sc_uint_baseaSEi
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EEC2Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EEC2Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EEC2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EEC2Ev,@function
_ZN5sc_dt7sc_uintILi4EEC2Ev:            # @_ZN5sc_dt7sc_uintILi4EEC2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp344:
	.cfi_def_cfa_offset 16
.Ltmp345:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp346:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	$4, %esi
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, %rax
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN5sc_dt12sc_uint_baseC2Ei
	leaq	_ZTVN5sc_dt7sc_uintILi4EEE, %rax
	addq	$16, %rax
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, (%rdi)
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp347:
	.size	_ZN5sc_dt7sc_uintILi4EEC2Ev, .Ltmp347-_ZN5sc_dt7sc_uintILi4EEC2Ev
	.cfi_endproc

	.section	.text._ZN7sc_core18sc_process_monitorD2Ev,"axG",@progbits,_ZN7sc_core18sc_process_monitorD2Ev,comdat
	.weak	_ZN7sc_core18sc_process_monitorD2Ev
	.align	16, 0x90
	.type	_ZN7sc_core18sc_process_monitorD2Ev,@function
_ZN7sc_core18sc_process_monitorD2Ev:    # @_ZN7sc_core18sc_process_monitorD2Ev
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	ret
.Ltmp348:
	.size	_ZN7sc_core18sc_process_monitorD2Ev, .Ltmp348-_ZN7sc_core18sc_process_monitorD2Ev
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi4EED2Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi4EED2Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi4EED2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi4EED2Ev,@function
_ZN5sc_dt7sc_uintILi4EED2Ev:            # @_ZN5sc_dt7sc_uintILi4EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp351:
	.cfi_def_cfa_offset 16
.Ltmp352:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp353:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp354:
	.size	_ZN5sc_dt7sc_uintILi4EED2Ev, .Ltmp354-_ZN5sc_dt7sc_uintILi4EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,"axG",@progbits,_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,comdat
	.weak	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv,@function
_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv: # @_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp357:
	.cfi_def_cfa_offset 16
.Ltmp358:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp359:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB51_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB51_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp360:
	.size	_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv, .Ltmp360-_ZNK7sc_core9sc_port_bINS_15sc_signal_in_ifIbEEEptEv
	.cfi_endproc

	.section	.text._ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv,"axG",@progbits,_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv,comdat
	.weak	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	.align	16, 0x90
	.type	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv,@function
_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv: # @_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp363:
	.cfi_def_cfa_offset 16
.Ltmp364:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp365:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	cmpq	$0, 96(%rdi)
	movq	%rdi, -16(%rbp)         # 8-byte Spill
	jne	.LBB52_2
# BB#1:
	leaq	_ZN7sc_core13SC_ID_GET_IF_E, %rsi
	leaq	.L.str, %rdx
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK7sc_core12sc_port_base12report_errorEPKcS2_
.LBB52_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	96(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp366:
	.size	_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv, .Ltmp366-_ZN7sc_core9sc_port_bINS_18sc_signal_inout_ifIbEEEptEv
	.cfi_endproc

	.section	.text._ZN5sc_dt7sc_uintILi32EED2Ev,"axG",@progbits,_ZN5sc_dt7sc_uintILi32EED2Ev,comdat
	.weak	_ZN5sc_dt7sc_uintILi32EED2Ev
	.align	16, 0x90
	.type	_ZN5sc_dt7sc_uintILi32EED2Ev,@function
_ZN5sc_dt7sc_uintILi32EED2Ev:           # @_ZN5sc_dt7sc_uintILi32EED2Ev
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp369:
	.cfi_def_cfa_offset 16
.Ltmp370:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp371:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN5sc_dt12sc_uint_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	ret
.Ltmp372:
	.size	_ZN5sc_dt7sc_uintILi32EED2Ev, .Ltmp372-_ZN5sc_dt7sc_uintILi32EED2Ev
	.cfi_endproc

	.section	.text._ZNK7sc_core9sc_object10simcontextEv,"axG",@progbits,_ZNK7sc_core9sc_object10simcontextEv,comdat
	.weak	_ZNK7sc_core9sc_object10simcontextEv
	.align	16, 0x90
	.type	_ZNK7sc_core9sc_object10simcontextEv,@function
_ZNK7sc_core9sc_object10simcontextEv:   # @_ZNK7sc_core9sc_object10simcontextEv
	.cfi_startproc
# BB#0:
	movq	%rdi, -8(%rsp)
	movq	-8(%rsp), %rdi
	movq	80(%rdi), %rax
	ret
.Ltmp373:
	.size	_ZNK7sc_core9sc_object10simcontextEv, .Ltmp373-_ZNK7sc_core9sc_object10simcontextEv
	.cfi_endproc

	.section	.text.startup,"ax",@progbits
	.align	16, 0x90
	.type	_GLOBAL__I_a,@function
_GLOBAL__I_a:                           # @_GLOBAL__I_a
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp376:
	.cfi_def_cfa_offset 16
.Ltmp377:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp378:
	.cfi_def_cfa_register %rbp
	callq	__cxx_global_var_init
	callq	__cxx_global_var_init1
	popq	%rbp
	ret
.Ltmp379:
	.size	_GLOBAL__I_a, .Ltmp379-_GLOBAL__I_a
	.cfi_endproc

	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.type	_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE,@object # @_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE
	.section	.rodata,"a",@progbits
_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE:
	.byte	1                       # 0x1
	.size	_ZN7sc_coreL26PHASH_DEFAULT_REORDER_FLAGE, 1

	.type	_ZN7sc_coreL17api_version_checkE,@object # @_ZN7sc_coreL17api_version_checkE
	.local	_ZN7sc_coreL17api_version_checkE
	.comm	_ZN7sc_coreL17api_version_checkE,1,1
	.type	_ZTVN7sc_core18sc_process_monitorE,@object # @_ZTVN7sc_core18sc_process_monitorE
	.section	.rodata._ZTVN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTVN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTVN7sc_core18sc_process_monitorE
	.align	16
_ZTVN7sc_core18sc_process_monitorE:
	.quad	0
	.quad	_ZTIN7sc_core18sc_process_monitorE
	.quad	_ZN7sc_core18sc_process_monitorD1Ev
	.quad	_ZN7sc_core18sc_process_monitorD0Ev
	.quad	_ZN7sc_core18sc_process_monitor6signalEPNS_17sc_thread_processEi
	.size	_ZTVN7sc_core18sc_process_monitorE, 40

	.type	_ZTSN7sc_core18sc_process_monitorE,@object # @_ZTSN7sc_core18sc_process_monitorE
	.section	.rodata._ZTSN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTSN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTSN7sc_core18sc_process_monitorE
	.align	16
_ZTSN7sc_core18sc_process_monitorE:
	.asciz	 "N7sc_core18sc_process_monitorE"
	.size	_ZTSN7sc_core18sc_process_monitorE, 31

	.type	_ZTIN7sc_core18sc_process_monitorE,@object # @_ZTIN7sc_core18sc_process_monitorE
	.section	.rodata._ZTIN7sc_core18sc_process_monitorE,"aG",@progbits,_ZTIN7sc_core18sc_process_monitorE,comdat
	.weak	_ZTIN7sc_core18sc_process_monitorE
	.align	8
_ZTIN7sc_core18sc_process_monitorE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7sc_core18sc_process_monitorE
	.size	_ZTIN7sc_core18sc_process_monitorE, 16

	.type	_ZTVN5sc_dt7sc_uintILi4EEE,@object # @_ZTVN5sc_dt7sc_uintILi4EEE
	.section	.rodata._ZTVN5sc_dt7sc_uintILi4EEE,"aG",@progbits,_ZTVN5sc_dt7sc_uintILi4EEE,comdat
	.weak	_ZTVN5sc_dt7sc_uintILi4EEE
	.align	16
_ZTVN5sc_dt7sc_uintILi4EEE:
	.quad	0
	.quad	_ZTIN5sc_dt7sc_uintILi4EEE
	.quad	_ZN5sc_dt13sc_value_base17concat_clear_dataEb
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_ctrlEPji
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_dataEPji
	.quad	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.quad	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.quad	_ZN5sc_dt12sc_uint_base10concat_setExi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_9sc_signedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_11sc_unsignedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setEyi
	.quad	_ZN5sc_dt7sc_uintILi4EED1Ev
	.quad	_ZN5sc_dt7sc_uintILi4EED0Ev
	.size	_ZTVN5sc_dt7sc_uintILi4EEE, 104

	.type	_ZTSN5sc_dt7sc_uintILi4EEE,@object # @_ZTSN5sc_dt7sc_uintILi4EEE
	.section	.rodata._ZTSN5sc_dt7sc_uintILi4EEE,"aG",@progbits,_ZTSN5sc_dt7sc_uintILi4EEE,comdat
	.weak	_ZTSN5sc_dt7sc_uintILi4EEE
	.align	16
_ZTSN5sc_dt7sc_uintILi4EEE:
	.asciz	 "N5sc_dt7sc_uintILi4EEE"
	.size	_ZTSN5sc_dt7sc_uintILi4EEE, 23

	.type	_ZTIN5sc_dt7sc_uintILi4EEE,@object # @_ZTIN5sc_dt7sc_uintILi4EEE
	.section	.rodata._ZTIN5sc_dt7sc_uintILi4EEE,"aG",@progbits,_ZTIN5sc_dt7sc_uintILi4EEE,comdat
	.weak	_ZTIN5sc_dt7sc_uintILi4EEE
	.align	16
_ZTIN5sc_dt7sc_uintILi4EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5sc_dt7sc_uintILi4EEE
	.quad	_ZTIN5sc_dt12sc_uint_baseE
	.size	_ZTIN5sc_dt7sc_uintILi4EEE, 24

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	 "port is not bound"
	.size	.L.str, 18

	.type	_ZTVN5sc_dt7sc_uintILi32EEE,@object # @_ZTVN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTVN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTVN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTVN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTVN5sc_dt7sc_uintILi32EEE:
	.quad	0
	.quad	_ZTIN5sc_dt7sc_uintILi32EEE
	.quad	_ZN5sc_dt13sc_value_base17concat_clear_dataEb
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_ctrlEPji
	.quad	_ZNK5sc_dt12sc_uint_base15concat_get_dataEPji
	.quad	_ZNK5sc_dt12sc_uint_base17concat_get_uint64Ev
	.quad	_ZNK5sc_dt12sc_uint_base13concat_lengthEPb
	.quad	_ZN5sc_dt12sc_uint_base10concat_setExi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_9sc_signedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setERKNS_11sc_unsignedEi
	.quad	_ZN5sc_dt12sc_uint_base10concat_setEyi
	.quad	_ZN5sc_dt7sc_uintILi32EED1Ev
	.quad	_ZN5sc_dt7sc_uintILi32EED0Ev
	.size	_ZTVN5sc_dt7sc_uintILi32EEE, 104

	.type	_ZTSN5sc_dt7sc_uintILi32EEE,@object # @_ZTSN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTSN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTSN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTSN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTSN5sc_dt7sc_uintILi32EEE:
	.asciz	 "N5sc_dt7sc_uintILi32EEE"
	.size	_ZTSN5sc_dt7sc_uintILi32EEE, 24

	.type	_ZTIN5sc_dt7sc_uintILi32EEE,@object # @_ZTIN5sc_dt7sc_uintILi32EEE
	.section	.rodata._ZTIN5sc_dt7sc_uintILi32EEE,"aG",@progbits,_ZTIN5sc_dt7sc_uintILi32EEE,comdat
	.weak	_ZTIN5sc_dt7sc_uintILi32EEE
	.align	16
_ZTIN5sc_dt7sc_uintILi32EEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN5sc_dt7sc_uintILi32EEE
	.quad	_ZTIN5sc_dt12sc_uint_baseE
	.size	_ZTIN5sc_dt7sc_uintILi32EEE, 24

	.section	.ctors,"aw",@progbits
	.align	8
	.quad	_GLOBAL__I_a

	.section	".note.GNU-stack","",@progbits

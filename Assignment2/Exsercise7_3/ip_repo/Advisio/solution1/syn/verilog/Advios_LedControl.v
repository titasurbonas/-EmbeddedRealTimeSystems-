// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Advios_LedControl (
        ap_clk,
        ap_rst,
        ctrl,
        inSwitch,
        outLeds,
        outLeds_ap_vld
);

parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input  [3:0] ctrl;
input  [3:0] inSwitch;
output  [3:0] outLeds;
output   outLeds_ap_vld;

reg[3:0] outLeds;
reg outLeds_ap_vld;

reg   [3:0] counter_V;
wire   [3:0] v_V_1_fu_127_p2;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_104_p2;
wire   [0:0] tmp_3_fu_117_p2;
wire   [3:0] r_V_fu_110_p2;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 counter_V = 4'd0;
#0 ap_CS_fsm = 2'd2;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_104_p2 == 1'd1))) begin
        if ((1'd1 == tmp_3_fu_117_p2)) begin
            counter_V <= 4'd0;
        end else if ((tmp_3_fu_117_p2 == 1'd0)) begin
            counter_V <= v_V_1_fu_127_p2;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if (((tmp_fu_104_p2 == 1'd1) & (1'd1 == tmp_3_fu_117_p2))) begin
            outLeds = 4'd0;
        end else if (((tmp_fu_104_p2 == 1'd1) & (tmp_3_fu_117_p2 == 1'd0))) begin
            outLeds = v_V_1_fu_127_p2;
        end else if ((tmp_fu_104_p2 == 1'd0)) begin
            outLeds = r_V_fu_110_p2;
        end else begin
            outLeds = 'bx;
        end
    end else begin
        outLeds = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_fu_104_p2 == 1'd1) & (tmp_3_fu_117_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_fu_104_p2 == 1'd1) & (1'd1 == tmp_3_fu_117_p2)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_fu_104_p2 == 1'd0)))) begin
        outLeds_ap_vld = 1'b1;
    end else begin
        outLeds_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign r_V_fu_110_p2 = (inSwitch & ctrl);

assign tmp_3_fu_117_p2 = ((inSwitch == 4'd8) ? 1'b1 : 1'b0);

assign tmp_fu_104_p2 = ((ctrl == 4'd0) ? 1'b1 : 1'b0);

assign v_V_1_fu_127_p2 = (counter_V + 4'd1);

endmodule //Advios_LedControl

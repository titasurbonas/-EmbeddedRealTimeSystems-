// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Advios,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.920000,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=140,HLS_SYN_LUT=132}" *)

module Advios (
        clk,
        clk_sc_in,
        clk_sc_out,
        reset,
        ctrl,
        inSwitch,
        outLeds
);


input   clk;
input   clk_sc_in;
output   clk_sc_out;
input   reset;
input  [3:0] ctrl;
input  [3:0] inSwitch;
output  [3:0] outLeds;

reg clk_sc_out = 1'd0;
reg[3:0] outLeds;

wire   [0:0] Advios_ssdm_threa_load_fu_114_p1;
wire   [1:0] ap_CS_fsm;
wire   [3:0] grp_Advios_LedControl_fu_76_outLeds;
wire    grp_Advios_LedControl_fu_76_outLeds_ap_vld;
wire    grp_Advios_modulate_clock_fu_96_clk_sc_out;
wire    grp_Advios_modulate_clock_fu_96_clk_sc_out_ap_vld;
wire    ap_CS_fsm_state2;

Advios_LedControl grp_Advios_LedControl_fu_76(
    .ap_clk(clk_sc_in),
    .ap_rst(reset),
    .ctrl(ctrl),
    .inSwitch(inSwitch),
    .outLeds(grp_Advios_LedControl_fu_76_outLeds),
    .outLeds_ap_vld(grp_Advios_LedControl_fu_76_outLeds_ap_vld)
);

Advios_modulate_clock grp_Advios_modulate_clock_fu_96(
    .ap_clk(clk),
    .ap_rst(reset),
    .clk_sc_in(1'b0),
    .clk_sc_out(grp_Advios_modulate_clock_fu_96_clk_sc_out),
    .clk_sc_out_ap_vld(grp_Advios_modulate_clock_fu_96_clk_sc_out_ap_vld)
);

always @ (posedge clk) begin
    if (reset == 1'b1) begin
        clk_sc_out <= 1'd0;
    end else begin
        if ((1'b1 == grp_Advios_modulate_clock_fu_96_clk_sc_out_ap_vld)) begin
            clk_sc_out <= grp_Advios_modulate_clock_fu_96_clk_sc_out;
        end
    end
end

always @ (posedge clk_sc_in) begin
    if ((1'b1 == grp_Advios_LedControl_fu_76_outLeds_ap_vld)) begin
        outLeds <= grp_Advios_LedControl_fu_76_outLeds;
    end
end

assign Advios_ssdm_threa_load_fu_114_p1 = 1'd0;

assign ap_CS_fsm = 2'd0;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

endmodule //Advios

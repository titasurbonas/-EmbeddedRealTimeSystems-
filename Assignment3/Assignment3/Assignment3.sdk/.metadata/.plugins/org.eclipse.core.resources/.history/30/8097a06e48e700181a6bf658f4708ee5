#include "State.h"


State::State()
{
}

void State::SelfTestOk(EmbeddedSystemX * context)
{
}
void State::SelfTestFailed(EmbeddedSystemX * context)
{
}
void State::Initialized(EmbeddedSystemX * context)
{
}
void State::Restart(EmbeddedSystemX * context)
{
}
void State::Configure(EmbeddedSystemX * context)
{
}
void State::ConfigurationEnded(EmbeddedSystemX * context)
{
}
void State::Exit(EmbeddedSystemX * context)
{
}
void State::Stop(EmbeddedSystemX * context)
{
}
void State::Start(EmbeddedSystemX * context)
{
}
void State::Suspend(EmbeddedSystemX * context)
{
}
void State::Resume(EmbeddedSystemX * context)
{
}
void State::ConfigX(EmbeddedSystemX * context)
{
}
void State::chMode(EmbeddedSystemX * context)
{
}
void State::EventX(EmbeddedSystemX * context)
{
}
void State::EventY(EmbeddedSystemX * context)
{
}
int State::GetMode(){
	return 0;
}
